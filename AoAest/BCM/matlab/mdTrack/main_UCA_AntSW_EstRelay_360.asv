clear;
addpath('./xDTrack-2D-Time');
load('./data/calib/spotFi_fastcalib_20M_2G_AP2_tr3.mat');
load('./data/debug_spotFi_tr3.mat');

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%         Parameters of the 802.11 standard
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

HTLTF_20            = [1, 1, 1, 1, -1, -1, 1, 1, -1, 1, -1, 1, 1, 1, 1, 1, 1, -1, -1, 1, 1, -1, 1, -1, 1, 1, 1, 1, 0,...
    1 -1, -1, 1, 1, -1, 1, -1, 1, -1, -1, -1, -1, -1, 1, 1, -1, -1, 1, -1, 1, -1, 1, 1, 1, 1, -1, -1];
HTLTF_20_all        = [0, 0, 0, 0, 1, 1, 1, 1, -1, -1, 1, 1, -1, 1, -1, 1, 1, 1, 1, 1, 1, -1, -1, 1, 1, -1, 1, -1, 1, 1, 1, 1, 0,...
    1 -1, -1, 1, 1, -1, 1, -1, 1, -1, -1, -1, -1, -1, 1, 1, -1, -1, 1, -1, 1, -1, 1, 1, 1, 1, -1, -1, 0, 0, 0,];

half_CSI_idx_lw_20  = 1:1:28;
half_CSI_idx_up_20  = 29:1:56;
occ_sub_20_1_ori    = -28:1:-1;
occ_sub_20_2_ori    = 1:1:28;
occ_sub_20_1        = occ_sub_20_1_ori + 33;
occ_sub_20_2        = occ_sub_20_1_ori + 62;

HTLTF_40        = [1, 1, -1, -1, 1, 1, -1, 1, -1, 1, 1, 1, 1, 1, 1, -1, -1, 1, 1, -1, 1, -1, 1, 1, 1, 1, 1, ...
    1, -1, -1, 1, 1, -1, 1, -1, 1, -1, -1, -1, -1, -1, 1, 1, -1, -1, 1, -1, 1, -1, 1, 1, 1, 1, -1, -1, -1, 1, 0, ... 
    0, 0, -1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, -1, 1, 1, 1, 1, 1, 1, -1, -1, 1, 1, -1, 1, -1, 1, 1, 1, 1, 1, ... 
    1, -1, -1, 1, 1, -1, 1, -1, 1, -1, -1, -1, -1, -1, 1, 1, -1, -1, 1, -1, 1, -1, 1, 1, 1, 1];

HTLTF_40_all    = [0, 0, 0, 0, 0, 0, 1, 1, -1, -1, 1, 1, -1, 1, -1, 1, 1, 1, 1, 1, 1, -1, -1, 1, 1, -1, 1, -1, 1, 1, 1, 1, 1, ...
    1, -1, -1, 1, 1, -1, 1, -1, 1, -1, -1, -1, -1, -1, 1, 1, -1, -1, 1, -1, 1, -1, 1, 1, 1, 1, -1, -1, -1, 1, 0, ... 
    0, 0, -1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, -1, 1, 1, 1, 1, 1, 1, -1, -1, 1, 1, -1, 1, -1, 1, 1, 1, 1, 1, ... 
    1, -1, -1, 1, 1, -1, 1, -1, 1, -1, -1, -1, -1, -1, 1, 1, -1, -1, 1, -1, 1, -1, 1, 1, 1, 1, 0, 0, 0, 0, 0,];

half_CSI_idx_lw_40  = 1:1:57;
half_CSI_idx_up_40  = 58:1:114;
occ_sub_40_1_ori    = -58:1:-2;
occ_sub_40_2_ori    = 2:1:58;
occ_sub_40_1        = occ_sub_40_1_ori + 65;
occ_sub_40_2        = occ_sub_40_2_ori + 65;

HTLTF_20_t      = ifft(HTLTF_20_all);
HTLTF_40_t      = ifft(HTLTF_40_all);

X_tx_t_40       = HTLTF_40_t;
X_tx_40         = HTLTF_40_all;

X_tx_t_20       = HTLTF_20_t;
X_tx_20         = HTLTF_20_all;
x_1     = 0:0.1:6.77;
x_2     = x_1;
y_1     = zeros(1,length(x_1));
y_2     = y_1 + 9.43;

y_3     = 0:0.1:9.43;
y_4     = y_3;
x_3     = zeros(1,length(y_3));
x_4     = x_3 + 6.77;
wall_x  = cat(2,x_1,x_2,x_3,x_4);
wall_y  = cat(2,y_1,y_2,y_3,y_4);

x_1     = 2.63:0.02:4.12;
x_2     = x_1;
y_1     = zeros(1,length(x_1))+3.19;
y_2     = zeros(1,length(x_1)) + 6.7;

y_3     = 3.19:0.02:6.7;
y_4     = y_3;
x_3     = zeros(1,length(y_3))+2.634;
x_4     = zeros(1,length(y_3)) + 4.12;
desk_x  = cat(2,x_1,x_2,x_3,x_4);
desk_y  = cat(2,y_1,y_2,y_3,y_4);
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%  Estimation parameters
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
sm          = 1;
step        = 0.01;
theta       = -pi:step:pi;
theta_len   = length(theta);
path        = 4;
mu          = 0;
sigma       = 0.1;

% rx_x        = 3.35;
% rx_y        = 7.20;
rx_x = 3.35;
rx_y = 3.35;

ENV_para    = para_cal(rx_x,rx_y,0.1);
loc_x       = ENV_para.loc_x;
loc_y       = ENV_para.loc_y;
N           = 64;
L           = path;
Pkt_Num     = 100;
car_num     = 56;

M           = 3;
opt20_M3    = xDTrack_system_parameter(X_tx_t_20,L,M,N);

M           = 9;
opt20_M9    = xDTrack_system_parameter(X_tx_t_20,L,M,N);

N           = 128;
M           = 3;
opt40_M3    = xDTrack_system_parameter(X_tx_t_40,L,M,N);
M           = 9;
opt40_M9    = xDTrack_system_parameter(X_tx_t_40,L,M,N);

subcarrier_idx          = zeros(1,56);
subcarrier_idx(1,1:28)  = 1:1:28;
subcarrier_idx(1,29:56)  = 30:1:57;

CSI_NUM_V   = 600;  % the number of CSI we will record
csi_num     = 0;    % count the number of csi received
idx1_num    = 0;
idx2_num    = 0;
idx3_num    = 0;

est_num     = 0;
est_flag    = 0;

step        = 0.01;
theta       = -pi:step:pi;
theta_len   = length(theta);

csi_idx_v   = 1:1:CSI_NUM_V;
csi_idx_v   = repmat(csi_idx_v,path,1);

CSI_M_calib_all   = zeros(9,56,CSI_NUM_V);
csi_idx1_all   = zeros(3,56,CSI_NUM_V);
csi_idx2_all   = zeros(3,56,CSI_NUM_V);
csi_idx3_all   = zeros(3,56,CSI_NUM_V);
csi_idx4_all   = zeros(3,56,CSI_NUM_V);
PathP_all      = zeros(path,4,CSI_NUM_V);
tof_vec     = zeros(path,CSI_NUM_V);
aoa_vec     = zeros(path,CSI_NUM_V);
amp_vec     = zeros(path,CSI_NUM_V);

tof_vec1     = zeros(path,CSI_NUM_V);
aoa_vec1     = zeros(path,CSI_NUM_V);
amp_vec1     = zeros(path,CSI_NUM_V);
fig_config = {'k.-','b.-','r.-','g.-','y.-','k*-','b*-','r*-','g*-','y*-'};

[n_rx,n_tx,n_sc,n_pkt] = size(CSI_struct);
pha_diff = [zeros(1,n_sc);pha_diff_rx12;pha_diff_rx13];
pha_diff_exp = exp(-1i*pha_diff);
for csi_st_idx = 1:1:n_pkt     % all the structure
    CSI         = squeeze(CSI_struct(:,1,:,csi_st_idx));
    N_tx        = n_tx;
    N_rx        = n_rx;
    num_tones   = n_sc;

        CSI_M       = CSI .* pha_diff_exp;

        CSI_all                 = zeros(M,64);
        CSI_all(:,occ_sub_20_1) = CSI_M(:,half_CSI_idx_lw_20);
        CSI_all(:,occ_sub_20_2) = CSI_M(:,half_CSI_idx_up_20);
        Y_rx_f                  = repmat(X_tx_20,M,1) .* CSI_all;
        Y_rx_t                  = ifft(Y_rx_f,[],2);
        [PathP,~]           = xDTrack(X_tx_20,Y_rx_t,opt20_M9);
        EST_para_result     = zeros(path,4,1);
        PathP(:,2)          = wrapToPi(PathP(:,2)- pi);
        EST_para_result(:,:,1)  = PathP;

        PathP_all(:,:,est_num)  = PathP;
        PathP_all(:,1,est_num)  = PathP(:,1) ./ 10^(-9);

        [loc_result,ANG_PDF_M_LOS] = func_Localizer(EST_para_result,ENV_para,mu,sigma);
%                     [pol_theta,pol_rho] = cart2pol(loc_x,loc_y);
        subplot(3,4,[2 3 4 6 7 8 10 11 12])
        h = pcolor(loc_x,loc_y,ANG_PDF_M_LOS); 
%                     h = polarPcolor(pol_rho,pol_theta,ANG_PDF_M_LOS);
        set(h,'EdgeColor', 'none');hold on 

        plot(rx_x,rx_y,'b^');hold on

        % plot the campass
        circle(rx_x,rx_y,rx_x,'c',1); hold on
        circle(rx_x,rx_y,rx_x-0.67,'c',1); hold on
        circle(rx_x,rx_y,rx_x-0.67*2,'c',1); hold on
        circle(rx_x,rx_y,rx_x-0.67*3,'c',1); hold on
        circle(rx_x,rx_y,rx_x-0.67*4,'c',1); hold on
        x = linspace(0,6.7); y = ones(1,100)*3.35; line(x,y,'Color','c','LineWidth',1);hold on
        x = ones(1,100)*3.35; y = linspace(0,6.7); line(x,y,'Color','c','LineWidth',1);hold on
%                     x = [0.99 5.7]; y = [0.97 5.7]; line(x,y,'Color','c','LineWidth',1);hold on
%                     x = [5.73 0.99]; y = [0.99 5.73]; line(x,y,'Color','c','LineWidth',1);hold on
        x1=5.04; y1=0.4527; del_x=x1-3.35; del_y=3.35-y1;
        x=[x1 3.35-del_x];y=[y1,3.35+del_y];line(x,y,'Color','c','LineWidth',1);hold on
        x=[3.35+del_y 3.35-del_y];y=[3.35-del_x,3.35+del_x];line(x,y,'Color','c','LineWidth',1);hold on
        x=[3.35+del_y 3.35-del_y];y=[3.35+del_x,3.35-del_x];line(x,y,'Color','c','LineWidth',1);hold on
        x=[3.35+del_x 3.35-del_x];y=[3.35+del_y,3.35-del_y];line(x,y,'Color','c','LineWidth',1);hold on


%                   plot(loc_result(1,1),loc_result(1,2),'ro','MarkerSize',8,'MarkerFaceColor','r');hold on
%                   plot(wall_x,wall_y,'.k');hold on    
%                     plot(desk_x,desk_y,'.r','MarkerSize',4);hold on             
%                     hold off;axis equal;xlim([0,6.7]);ylim([0,9.4]);drawnow;
        hold off;axis equal;xlim([0,6.7]);ylim([0,6.7]);title('SWAN Localization','FontSize',20);drawnow;
%                   mssend(sockWserver,PathP);
        %%%%%%%%%%%%%%%%%%%%%%%%   ToF     %%%%%%%%%%%%%%%%%%%%%%%%
        tof_ns          = PathP(:,1) ./ 10^(-9);
        [tof_sort,idx]  = sort(tof_ns);
        tof_vec(:,est_num)    = tof_sort;

        subplot(3,4,1)
        for i = 1:1:path
            plot(csi_idx_v(i,1:est_num),tof_vec(i,1:est_num),fig_config{i}); hold on
        end
        hold off
        title('ToF estimation');xlabel('packet index');ylabel('ToF (ns)');drawnow;                                        

        %%%%%%%%%%%%%%%%%%%%%%%%   AoA     %%%%%%%%%%%%%%%%%%%%%%%%
        aoa_rad         = rad2deg(PathP(idx,2));
        aoa_vec(:,est_num)    = aoa_rad;
        subplot(3,4,5)
        for i = 1:1:path
            plot(csi_idx_v(i,1:est_num),aoa_vec(i,1:est_num),fig_config{i});hold on
        end
        hold off
        title('AoA estimation');xlabel('packet index');ylabel('AoA (deg)');drawnow;
        PathP_all(:,:,est_num)  = PathP;

        %%%%%%%%%%%%%%%%%%%%%%%%   Amp     %%%%%%%%%%%%%%%%%%%%%%%%
        amp_db          = db(abs(PathP(idx,4)));

        amp_vec(:,est_num)    = amp_db;

        subplot(3,4,9)
        for i = 1:1:path
            plot(csi_idx_v(i,1:est_num),amp_vec(i,1:est_num),fig_config{i});hold on
        end
        hold off
        title('amp estimation');xlabel('packet index');ylabel('amp (db)');drawnow;

        %%%%%%%%%%%%%%%%%%%%%%   AOA polar plot    %%%%%%%%%%%%%%%%%%%%%%%%
%                     CSI_M_calib_all(:,:,est_num) = CSI_M;
%                     ang_est         = floor((PathP(:,2)+pi) ./ step) + 1 ;
%                     PMU_xDTrack     = zeros(1,theta_len);
%                     PMU_xDTrack(1,ang_est)  = PMU_xDTrack(1,ang_est)  + 10;
%                     subplot(2,4,4)
% %                     halfPolar(theta,PMU_xDTrack);drawnow;
%                     polarplot(theta,PMU_xDTrack);drawnow;
%                     %%%%%%%%%%%%%%%%%%%%%%   MUSIC AOA polar plot    %%%%%%%%%%%%%%%%%%%%%%%%
%           
%                     sm      = 2;

%                     [~, pks, PMU_817] = func_music_AOA(Y_rx_t,2,sm,step);
%                     [~, ~, PMU_817] = func_music_AOA(CSI_M,2,sm,step);
%                     subplot(1,5,5)
%                     polar(theta,PMU_817);

end

